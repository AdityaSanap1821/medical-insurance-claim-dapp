{"ast":null,"code":"var _jsxFileName = \"/Users/sahilsamant/Desktop/BlockChain LY Project/medical-claim-dapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ClaimForm from './components/ClaimForm';\nimport ClaimStatus from './components/ClaimStatus';\nimport AdminPanel from './components/AdminPanel';\nimport TransactionHistory from './components/TransactionHistory';\nimport Login from './components/Login';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [user, setUser] = useState(null); // State to hold logged-in user\n\n  const handleLogin = userData => {\n    setUser(userData); // Set user data when logging in\n  };\n\n  // Mock data for demonstration\n  const claimId = 'example-claim-id';\n  const claimStatus = 'Pending';\n  const transactions = [\"Transaction 1\", \"Transaction 2\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blockchain-Based Medical Insurance Claim DApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), !user ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : user.role === 'patient' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ClaimForm, {\n        onSubmitClaim: data => console.log('Claim submitted:', data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ClaimStatus, {\n        claimId: claimId,\n        status: claimStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TransactionHistory, {\n        transactions: transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(AdminPanel, {\n      claimId: claimId,\n      onApprove: id => console.log(`Claim ${id} approved`),\n      onReject: id => console.log(`Claim ${id} rejected`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ClaimForm","ClaimStatus","AdminPanel","TransactionHistory","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","setUser","handleLogin","userData","claimId","claimStatus","transactions","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","role","onSubmitClaim","data","console","log","status","onApprove","id","onReject","_c","$RefreshReg$"],"sources":["/Users/sahilsamant/Desktop/BlockChain LY Project/medical-claim-dapp/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ClaimForm from './components/ClaimForm';\nimport ClaimStatus from './components/ClaimStatus';\nimport AdminPanel from './components/AdminPanel';\nimport TransactionHistory from './components/TransactionHistory';\nimport Login from './components/Login';\n\nconst App = () => {\n  const [user, setUser] = useState(null); // State to hold logged-in user\n\n  const handleLogin = (userData) => {\n    setUser(userData); // Set user data when logging in\n  };\n\n  // Mock data for demonstration\n  const claimId = 'example-claim-id';\n  const claimStatus = 'Pending';\n  const transactions = [\"Transaction 1\", \"Transaction 2\"];\n\n  return (\n    <div>\n      <h1>Blockchain-Based Medical Insurance Claim DApp</h1>\n      {!user ? (\n        <Login onLogin={handleLogin} />\n      ) : user.role === 'patient' ? (\n        <>\n          <ClaimForm onSubmitClaim={(data) => console.log('Claim submitted:', data)} />\n          <ClaimStatus claimId={claimId} status={claimStatus} />\n          <TransactionHistory transactions={transactions} />\n        </>\n      ) : (\n        <AdminPanel claimId={claimId} onApprove={(id) => console.log(`Claim ${id} approved`)} onReject={(id) => console.log(`Claim ${id} rejected`)} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,kBAAkB,MAAM,iCAAiC;AAChE,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC,MAAMc,WAAW,GAAIC,QAAQ,IAAK;IAChCF,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAC;EACrB,CAAC;;EAED;EACA,MAAMC,OAAO,GAAG,kBAAkB;EAClC,MAAMC,WAAW,GAAG,SAAS;EAC7B,MAAMC,YAAY,GAAG,CAAC,eAAe,EAAE,eAAe,CAAC;EAEvD,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAA6C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrD,CAACX,IAAI,gBACJL,OAAA,CAACF,KAAK;MAACmB,OAAO,EAAEV;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAC7BX,IAAI,CAACa,IAAI,KAAK,SAAS,gBACzBlB,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACEZ,OAAA,CAACN,SAAS;QAACyB,aAAa,EAAGC,IAAI,IAAKC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7EhB,OAAA,CAACL,WAAW;QAACc,OAAO,EAAEA,OAAQ;QAACc,MAAM,EAAEb;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtDhB,OAAA,CAACH,kBAAkB;QAACc,YAAY,EAAEA;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAClD,CAAC,gBAEHhB,OAAA,CAACJ,UAAU;MAACa,OAAO,EAAEA,OAAQ;MAACe,SAAS,EAAGC,EAAE,IAAKJ,OAAO,CAACC,GAAG,CAAC,SAASG,EAAE,WAAW,CAAE;MAACC,QAAQ,EAAGD,EAAE,IAAKJ,OAAO,CAACC,GAAG,CAAC,SAASG,EAAE,WAAW;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC/I;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACZ,EAAA,CA5BID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}